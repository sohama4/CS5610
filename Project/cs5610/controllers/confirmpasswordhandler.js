var MongoClient = require('mongodb').MongoClient;
var format = require('util').format;
var md5 = require('./md5.js');
var crypto = require('crypto');
var statehandler = require('./statehandler.js');
globalusername = null;


function updateEntry(req, res, collection)
{
	collection.update({_id:"123"}, {$set: {author:"Jessica"}});
}

function collcallback(req, res, collection)
{
	var password = md5.md5(req.body.spassword);
	
	// check if user is entering the autogenerated password again. Prevent it!
	collection.find({username: globalusername, generatedpassword: password}).count(function(err, countEntries)
	{
		if(err)
			throw err
		else
		{
			if(countEntries == 1)
				res.render(basedir + '/views/confirmpassword.html', 
					{errors : 'Enter a new password!'});
			else
			{
				collection.update(
					{username: globalusername}, 
					{$set: {password: password, generatedpassword: null}},
					function(err, result)
					{
						if(err)
							throw err;
						else
							statehandler.statehandler(req, null, globalusername, res);
					});
			}
		}
	});
}


function dbcallback(req, res, db)
{
	db.createCollection('RegisteredUsers', function(err, collection) 
	{
		if (err)
			throw err;
		else
			collcallback(req, res, collection)
	});
}


function confirmpassword(req, res, hashed)
{
	req.session.prev = null;
	var mongourl;
	if(process.env.OPENSHIFT_MONGODB_DB_URL)
		mongourl = process.env.OPENSHIFT_MONGODB_DB_URL + "/CS5610";
	else
		mongourl = "mongodb://127.0.0.1:27017/test";
	MongoClient.connect(mongourl, function (err, db)
	{
		if (err)
			throw err;
		else
		{
			globalusername = hashed;
			dbcallback(req, res, db);
		}			
	});
}
exports.confirmpassword = confirmpassword